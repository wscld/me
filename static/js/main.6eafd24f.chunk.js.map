{"version":3,"sources":["services/github.js","components/header/styles.js","components/header/index.js","components/list-item/styles.js","components/list-item/index.js","services/medium.js","pages/home/styles.js","pages/home/index.js","App.js","reportWebVitals.js","index.js"],"names":["getRepos","username","a","axios","get","response","getAvatar","data","avatar_url","Container","styled","div","Title","Subtitle","Image","img","Header","useState","image","setImage","useEffect","then","res","src","ListItem","title","link","href","target","getMediumPosts","List","Link","Home","repos","setRepos","posts","setPosts","items","length","map","post","i","repo","name","url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAEaA,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACGC,IAAMC,IAAI,gCAAkCH,EAAW,UAD1D,cACdI,EADc,yBAEbA,GAFa,2CAAH,sDAKRC,EAAS,uCAAG,WAAOL,GAAP,eAAAC,EAAA,sEACEC,IAAMC,IAAI,gCAAkCH,GAD9C,cACfI,EADe,yBAEdA,EAASE,KAAKC,YAFA,2CAAH,sD,cCLTC,EAAYC,IAAOC,IAAV,6JASTC,EAAQF,IAAOC,IAAV,qIAQLE,EAAWH,IAAOC,IAAV,sIAQRG,EAAQJ,IAAOK,IAAV,mG,OCPHC,EAhBA,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACHC,EADG,KAQjB,OANAC,qBAAU,WACNd,EAAU,SAASe,MAAK,SAAAC,GACpBH,EAASG,QAEd,IAGC,eAACb,EAAD,WACI,cAACK,EAAD,CAAOS,IAAKL,IACZ,cAACN,EAAD,4BACA,cAACC,EAAD,oFCdCJ,EAAYC,IAAOR,EAAV,gXCSPsB,EARE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAEvB,OACI,cAAC,EAAD,CAAWC,KAAMD,EAAME,OAAO,SAA9B,SACKH,KCLAI,EAAc,uCAAG,WAAO5B,GAAP,eAAAC,EAAA,6DACpBG,EAAWF,IAAMC,IAAI,yEAAyEH,GAD1E,kBAEnBI,GAFmB,2CAAH,sDCAdI,EAAYC,IAAOC,IAAV,scAgBTmB,EAAOpB,IAAOC,IAAV,2CAIJC,EAAQF,IAAOC,IAAV,oIAQLoB,EAAOrB,IAAOR,EAAV,yOCcF8B,EArCF,WAAO,IAAD,EACWf,mBAAS,IADpB,mBACRgB,EADQ,KACDC,EADC,OAEWjB,mBAAS,IAFpB,mBAERkB,EAFQ,KAEDC,EAFC,KAcf,OAVAhB,qBAAU,WACNpB,EAAS,SAASqB,MAAK,SAAAC,GACnBY,EAASZ,EAAIf,SAGjBsB,EAAe,SAASR,MAAK,SAAAC,GACzBc,EAASd,EAAIf,KAAK8B,YAEvB,IAGC,qCACI,cAAC,EAAD,IACA,eAAC,EAAD,WACI,cAACN,EAAD,qBADJ,MAC0B,cAACA,EAAD,qBAD1B,MACgD,cAACA,EAAD,uBADhD,MACyE,cAACA,EAAD,2BAGzE,cAAC,EAAD,UACI,eAACD,EAAD,WACI,eAAC,EAAD,kCAAkBK,EAAMG,OAAxB,OACCH,EAAMI,KAAI,SAACC,EAAMC,GAAP,OAAc,cAAC,EAAD,CAAUhB,MAAOe,EAAKf,MAAOC,KAAMc,EAAKd,MAAWe,WAIpF,cAAC,EAAD,UACI,eAACX,EAAD,WACI,eAAC,EAAD,yCAAyBG,EAAMK,OAA/B,OACCL,EAAMM,KAAI,SAACG,EAAMD,GAAP,OAAc,cAAC,EAAD,CAAUhB,MAAOiB,EAAKC,KAAMjB,KAAMgB,EAAKE,KAAUH,eC7B/EI,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6eafd24f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getRepos = async (username) => {\r\n    const response = await axios.get('https://api.github.com/users/' + username + '/repos');\r\n    return response;\r\n}\r\n\r\nexport const getAvatar = async (username) => {\r\n    const response = await axios.get('https://api.github.com/users/' + username);\r\n    return response.data.avatar_url;\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  max-width:500px;\r\n  margin:auto;\r\n  display:flex;\r\n  flex-direction:column;\r\n  justify-content:center;\r\n  align-items:center;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 3em;\r\n  text-align: center;\r\n  margin-bottom:5px;\r\n  font-weight:bolder;\r\n  color:#2f3542;\r\n`;\r\n\r\nexport const Subtitle = styled.div`\r\n  font-size: 1em;\r\n  text-align: center;\r\n  margin-bottom:20px;\r\n  font-weight:normal;\r\n  color:#2f3542;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  border-radius:50%;\r\n  width:100px;\r\n  height:100px;\r\n  margin:20px;\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport { getAvatar } from '../../services/github';\r\nimport { Title, Subtitle, Image, Container } from './styles';\r\n\r\nconst Header = () => {\r\n    const [image, setImage] = useState('');\r\n    useEffect(() => {\r\n        getAvatar('wscld').then(res => {\r\n            setImage(res);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={image} />\r\n            <Title>Wesley Caldas</Title>\r\n            <Subtitle>üßëüèª‚Äçüíª Desenvolvedor Frontend</Subtitle>\r\n        </Container>\r\n    )\r\n}\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const Container = styled.a`\r\n    padding:15px;\r\n    margin: 10px auto;\r\n    display: flex;\r\n    justify-content: left;\r\n    align-items: center;\r\n    border: 1px solid #eee;\r\n    border-radius: 10px;\r\n    text-decoration: none;\r\n    color: black;\r\n    cursor: pointer;\r\n    transition:.2s;\r\n    &:hover{\r\n        background-color:#1abc9c;\r\n        color:white;\r\n    }\r\n`;","import React from 'react';\r\nimport { Container } from './styles';\r\n\r\nconst ListItem = ({ title, link }) => {\r\n\r\n    return (\r\n        <Container href={link} target='_blank'>\r\n            {title}\r\n        </Container>\r\n    )\r\n}\r\nexport default ListItem;","import axios from \"axios\"\r\n\r\nexport const getMediumPosts = async (username) => {\r\n    const response = axios.get('https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@'+username);\r\n    return response;\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    background-color:white;\r\n    max-width:500px;\r\n    margin:auto;\r\n    padding:20px;\r\n    border-radius:10px;\r\n    margin-bottom:10px;\r\n    display:flex;\r\n    flex-wrap: wrap;\r\n    align-items:center;\r\n    justify-content:center;\r\n    -webkit-box-shadow: 4px 4px 18px -5px rgb(179 179 179 / 72%);\r\n    -moz-box-shadow: 4px 4px 18px -5px rgba(179, 179, 179, 0.72);\r\n    box-shadow: 4px 4px 18px -5px rgb(179 179 179 / 72%);\r\n`;\r\n\r\nexport const List = styled.div`\r\n  width:100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 1em;\r\n  text-align: left;\r\n  margin-bottom:20px;\r\n  font-weight:bolder;\r\n  color:#2f3542;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    color:#1abc9c;\r\n    font-weight:bold;\r\n    border-bottom:1px dashed black;\r\n    margin:10px;\r\n    transition:.2s;\r\n    cursor: pointer;\r\n    &:hover{\r\n        border-bottom:1px dashed #1abc9c;\r\n    }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Header from '../../components/header';\r\nimport ListItem from '../../components/list-item';\r\nimport { getRepos } from '../../services/github';\r\nimport { getMediumPosts } from '../../services/medium';\r\nimport { Container, List, Link, Title } from './styles';\r\n\r\nconst Home = () => {\r\n    const [repos, setRepos] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getRepos('wscld').then(res => {\r\n            setRepos(res.data);\r\n        })\r\n\r\n        getMediumPosts('wscld').then(res => {\r\n            setPosts(res.data.items);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Header></Header>\r\n            <Container>\r\n                <Link>Github</Link> / <Link>Medium</Link> / <Link>Linkedin</Link > / <Link>Portfolio</Link>\r\n            </Container>\r\n\r\n            <Container>\r\n                <List>\r\n                    <Title>üìì Posts ({posts.length})</Title>\r\n                    {posts.map((post, i) => (<ListItem title={post.title} link={post.link} key={i}></ListItem>))}\r\n                </List>\r\n            </Container>\r\n\r\n            <Container>\r\n                <List>\r\n                    <Title>üíª Repositorios ({repos.length})</Title>\r\n                    {repos.map((repo, i) => (<ListItem title={repo.name} link={repo.url} key={i}></ListItem>))}\r\n                </List>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\nexport default Home;","import './App.css';\nimport Home from './pages/home';\n\nfunction App() {\n  return (\n    <Home></Home>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}